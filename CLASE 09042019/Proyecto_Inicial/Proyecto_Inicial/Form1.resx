<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>